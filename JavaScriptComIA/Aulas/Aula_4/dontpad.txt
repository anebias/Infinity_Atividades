https://dontpad.com/dfs7070208

REPOSITÓRIO DE AULAS:
https://github.com/thiagooshiro/js-classes

PARA CLONAR:
git clone https://github.com/thiagooshiro/js-classes.git


Contato prof:
oshirothiago@gmail.com
31987962204 

MÉTODOS DE ARRAY:


let cadastros = ['Bruno', 'Arthur', 'Gabriel', 'Lucas', 'Amanda', 'Bárbara']
                // 0        1          2          3       4          5
console.log(cadastros.length) // 6
console.log(cadastros[cadastros.length - 1]) // Imprime o último item do array cadastros, o indice 5 , 'Bárbara'


console.log(cadastros[0]) // Cadastros indice 0 é o primeiro item da lista.

//Propriedades de Array:

// Array.length
// Retorna o valor da extensão do array (numérico)
console.log(cadastros.length) 


//Array.push 
// Adiciona um ou mais valores AO FINAL DO array;
cadastros.push('Diogo')

console.log(cadastros)

//Array.pop
// Remove um valor do FINAL DO ARRAY.

let ultimo = cadastros.pop() // O método pop retorna o valor removido
console.log(ultimo) // Valor removido da lista (no caso, 'Diogo')

console.log(cadastros) // Lista sem o Diogo


//Array.shift
// Remove um valor no INICIO DA LISTA.

let primeiro = cadastros.shift() //remove o primeiro item da lista (Bruno) e retorna esse valor.
console.log(primeiro) // Retorna o valor removido (Bruno)

console.log(cadastros)// Retorna lista sem o valor 'Bruno' 


//Array.unshift
//Adiciona um ou mais valores no íncio do Array

cadastros.unshift('Maria', 'João') //valores adicionados no começo da lista

console.log(cadastros) //Array atualizado com 'Maria' e 'João' como primeiro e segundo valores do array;

//Array.splice
//
let frutas = ['Maçã', 'Pera', 'Banana', 'Uva', 'Abacate']
frutas.splice(0, 2, 'Abacate') // A partir do índice de referência (primeiro número), deleta uma quantidade de itens igual ao segundo numero e adiciona na lista os valores subsequentes. 

console.log(frutas) //


//Array.slice
//Cria cópia superficial do array a partir dos índices de referência;
frutas = ['Maçã', 'Pera', 'Banana', 'Uva', 'Abacate']
let cortadinho = frutas.slice(1,3) // A partir dos indices 1 e 3 a cópia é criada, mas sem incluir o valor final (3), ou seja, os índices incluídos na cópia são os indices 1 e 2 ('Pera' e 'Banana')
console.log(cortadinho) //Retorna array com itens 'Pera' e 'Banana'

console.log(frutas) //Array original permanece intacto.


//Array.includes
//O método includes retorna true ou false se o valor informado existir dentro da lista (ou da string)
let amigos = ['Filipe', 'Karina', 'Luiz', 'Flávio', 'Jéssica', 'João']
console.log(amigos.includes('João')) // true
console.log(amigos.includes('a')) // false - > porque não existe um elemento 'a' na lista, embora alguns nomes possuam esse caracter.

let numeros = [1, 42, 27, 35, 4.72]

console.log(numeros.includes(2)) // true


EXERCÍCIOS:



// Exercícios de laços de repetição.


// Lembre-se de criar um arquivo em separado para cada um dos exercícios para melhor organizar seu código.


// 1 - Crie um algoritmo que imprima todos os números de até um valor alvo.
// Ex: Se o valor alvo é 10, o programa deve imprimir: 1, 2, 3, 4, 5, 6, 7, 8, 9 e 10;





// 2 - Crie um algoritmo que lê uma palavra e imprime as letras separadamente e cada letra em caixa alta (maiúscula)


// 3 -  Crie um algoritmo que exibe a tabuada de um determinado número:
// Ex - Se o valor escolhido for 3 a saída do terminal deverá ser algo mais ou menos assim:
// 3 x 1 = 3
// 3 x 2 = 6
// 3 x 3 = 9
// 3 x 4 = 12
// 3 x 5 = 15
// 3 x 6 = 18
// 3 x 7 = 21 
// 3 x 8 = 24
// 3 x 9 = 27
// 3 x 10 = 30


// 4 - Observe as seguintes listas: 
let nomes = ['Bruna', 'Gabriel', 'Marcos', 'Jéssica', 'Fernando']
let sobrenomes = ['Oliveira', 'Santos', 'Marques', 'Castro', 'Silva']

//Crie um algirtmo que combine o valor do nome com o sobrenome formando o nome completo.
// O programa deve iterar sobre as listas fornecidas e juntar os valores correspondentes.



// 5 - Observe as seguintes listas:
const clientes = ["João", "Daniel", "Larissa", "Mariana", "Julia", "Luana", "Gustavo", "Luiz"]
const produtos = ["molho de tomate", "cenoura", "macarrão", "salame", "lâmpada", "água sanitária", "refrigerante", "suco"]
// Essas duas listas mostram quem comprou um determinado produto, por exemlpo, "João" comprou "molho de tomate" e assim por  diante.
// Crie um algoritmo que imprima a seguinte mensagem para cada cliente:
// "O cliente {nome do cliente} comprou {produto}"


// 6 - Crie um programa que realiza um filtro na lista abaixo, verificando se a palavra inicia ou termina com o carácter escolhido.
let produtosDoMercado = ["aveia", "maçã", "uva", "abobora", "leite", "pão", "sabonete", "desodorante", "amaciante", "chuveiro"]

// 7 - Crie um algoritmo que lê uma lista de palavras e inverte as palavras, sem alterar a ordem da lista original. 
// Ex: lista = ['Mariana', 'Luiz', 'João', 'Amanda']
// output esperado: ['Anairam', 'Ziul', 'Oãoj', 'Adnama']

// 8 - Desafio - Jogo de Pedra Papel Tesoura:
// O usuário deve poder escolher entre 3 opções: "pedra", "papel" ou "tesoura"
// A máquina deve escolher aleatoriamente entre as opções "pedra", "papel" ou "tesoura"
// O algoritmo deve fazer a comparação para descobrir quem foi o vencedor da partida.
// Lembrando:
// Pedra vence tesoura;
// Tesoura vence papel;
// Papel vence pedra;

//O programa deve possibiltar que o usuário jogue novas partidas se desejar.
// Obs: Existem caminhos bastante distintos para resolver esse desafio.





 